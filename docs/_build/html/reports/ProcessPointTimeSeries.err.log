Traceback (most recent call last):
  File "/home/z0272571a@CAMPUS.CSIC.ES/miniconda3/envs/pyTSEB/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/z0272571a@CAMPUS.CSIC.ES/miniconda3/envs/pyTSEB/lib/python3.12/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z0272571a@CAMPUS.CSIC.ES/miniconda3/envs/pyTSEB/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z0272571a@CAMPUS.CSIC.ES/miniconda3/envs/pyTSEB/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/z0272571a@CAMPUS.CSIC.ES/miniconda3/envs/pyTSEB/lib/python3.12/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/z0272571a@CAMPUS.CSIC.ES/miniconda3/envs/pyTSEB/lib/python3.12/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/z0272571a@CAMPUS.CSIC.ES/miniconda3/envs/pyTSEB/lib/python3.12/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
from bokeh.plotting import figure, output_file, show
from bokeh.io import output_notebook
from bokeh.models import *
from bokeh.resources import INLINE
output_notebook(resources=INLINE)
# get the data
output=np.genfromtxt(setup.outputFile,names=True,dtype=None)
# create a datetime variable
timestamp=np.array(output['Year'].astype(int).astype(str),dtype='datetime64')
timestamp=timestamp+np.array(output['DOY'],dtype='timedelta64[D]')
timestamp=np.array(timestamp.astype(str))
# Add time to the time
for i,string in enumerate(timestamp):
    timestamp[i]=string+'T00:00'
timestamp=np.array(timestamp,dtype='datetime64')
delta=np.array(output['Time'].astype(int),dtype='timedelta64[h]')
timestamp=timestamp+delta
timestamp=timestamp+np.array(np.array((output['Time']-output['Time'].astype(int))*60,dtype='timedelta64[m]'))

# Create  Figure 
source=ColumnDataSource(data=dict(timestamp=timestamp,Year=output['Year'],DOY=output['DOY'],Time=np.round(output['Time'],2),
                                  H=np.round(output['H_model'],0),LE=np.round(output['LE_model'],0),Rn=np.round(output['Rn_model'],0),
                                  G=np.round(output['G_model'],0),flag=output['flag']))
p = figure(title="Time Series", plot_width=600, plot_height=400,x_axis_type="datetime")
# Plot all the points as dashed lines
p.line('timestamp','H',source=source, color='red',line_dash=[4,4])
p.line('timestamp','LE',source=source, color='blue', line_dash=[4,4])
line=p.line('timestamp','Rn',source=source, color='black', line_dash=[4,4])
p.line('timestamp','G',source=source, color='green', line_dash=[4,4])
# Create a hover tool
hover = HoverTool(tooltips=[("Date", "@Year"),('DOY',"@DOY"),
                           ('Time',"@Time"),('H','@H'),
                           ('LE','@LE'),('Rn','@Rn'),
                            ('G','@G'),('flag','@flag')],line_policy='nearest',point_policy='snap_to_data',mode='vline', renderers=[line])
p.add_tools(hover)
# Filter only good quatlity data points flag<5:
H=np.array(output['H_model'])
H[output['flag']>=5]=float('nan')
LE=np.array(output['LE_model'])
LE[output['flag']>=5]=float('nan')
Rn=np.array(output['Rn_model'])
Rn[output['flag']>=5]=float('nan')
G=np.array(output['G_model'])
G[output['flag']>=5]=float('nan')
#Plot good quality data as straight lines
p.line(x=timestamp,y=H, color='red', legend='H')
p.line(x=timestamp,y=LE, color='blue', legend='LE')
p.line(x=timestamp,y=Rn, color='black', legend='Rn')
p.line(x=timestamp,y=G, color='green', legend='G')

show(p);
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[2], line 8[0m
[1;32m      6[0m output_notebook(resources[38;5;241m=[39mINLINE)
[1;32m      7[0m [38;5;66;03m# get the data[39;00m
[0;32m----> 8[0m output[38;5;241m=[39mnp[38;5;241m.[39mgenfromtxt([43msetup[49m[38;5;241;43m.[39;49m[43moutputFile[49m,names[38;5;241m=[39m[38;5;28;01mTrue[39;00m,dtype[38;5;241m=[39m[38;5;28;01mNone[39;00m)
[1;32m      9[0m [38;5;66;03m# create a datetime variable[39;00m
[1;32m     10[0m timestamp[38;5;241m=[39mnp[38;5;241m.[39marray(output[[38;5;124m'[39m[38;5;124mYear[39m[38;5;124m'[39m][38;5;241m.[39mastype([38;5;28mint[39m)[38;5;241m.[39mastype([38;5;28mstr[39m),dtype[38;5;241m=[39m[38;5;124m'[39m[38;5;124mdatetime64[39m[38;5;124m'[39m)

[0;31mAttributeError[0m: 'TSEBIPythonInterface' object has no attribute 'outputFile'

